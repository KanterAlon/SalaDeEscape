<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PrimerProyecto</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PrimerProyecto.styles.css" asp-append-version="true" />
</head>
<body>
    @{
        var action = ViewContext.RouteData.Values["action"].ToString();
    }

    @if (action == "Tutorial" || action == "Creditos")
    {
        <a href="@Url.Action("Index", "Home")" class="back-button">
            <div class="back-button-content">
                ←
            </div>
        </a>
    }

    @RenderBody()

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    @if (action != "Index" && action != "Tutorial" && action != "Creditos" && action != "Tiempo")
    {
        <footer>
            <div class="footer-content">
                <button class="btn btn-secondary-custom back-to-home">Volver al Inicio</button>
                <div class="timer">Tiempo: <span id="timer">10:00</span></div>
            </div>
        </footer>

        <script>
            const initialTime = 600; // 10 minutos en segundos
            let timeLeft = localStorage.getItem('timeLeft') ? parseInt(localStorage.getItem('timeLeft')) : initialTime;
            let timerInterval;

            function startTimer() {
                clearInterval(timerInterval);
                timerInterval = setInterval(() => {
                    if (timeLeft <= 0) {
                        clearInterval(timerInterval);
                        window.location.href = '@Url.Action("Tiempo", "Home")';
                        return;
                    }
                    timeLeft--;
                    localStorage.setItem('timeLeft', timeLeft);
                    displayTime(timeLeft);
                }, 1000);
            }

            function displayTime(seconds) {
                const minutes = Math.floor(seconds / 60);
                const remainingSeconds = seconds % 60;
                document.getElementById('timer').textContent = `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
            }

            document.addEventListener('DOMContentLoaded', (event) => {
                // Guardar la última habitación visitada
                localStorage.setItem('lastRoom', '@action');

                timeLeft = localStorage.getItem('timeLeft') ? parseInt(localStorage.getItem('timeLeft')) : initialTime; // Usar el tiempo restante guardado
                displayTime(timeLeft);
                startTimer();

                // Confirmación para volver al inicio
                document.querySelector('.back-to-home').addEventListener('click', function() {
                    document.querySelector('.confirm-box').classList.remove('hidden');
                });

                document.querySelector('.confirm-yes').addEventListener('click', function() {
                    localStorage.removeItem('timeLeft');
                    window.location.href = '@Url.Action("Index", "Home")';
                });

                document.querySelector('.confirm-no').addEventListener('click', function() {
                    document.querySelector('.confirm-box').classList.add('hidden');
                });
            });
        </script>

        <div class="confirm-box hidden">
            <div class="confirm-content">
                <p>¿Estás seguro que quieres volver? Perderás todo el progreso.</p>
                <button class="btn btn-primary-custom confirm-yes">Sí</button>
                <button class="btn btn-secondary-custom confirm-no">No</button>
            </div>
        </div>
    }
</body>
</html>
